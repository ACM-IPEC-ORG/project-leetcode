{"id":763240428,"lang":"cpp","time":"2Â months","timestamp":1659445961,"status_display":"Accepted","runtime":"447 ms","url":"/submissions/detail/763240428/","is_pending":"Not Pending","title":"Kth Smallest Element in a Sorted Matrix","memory":"207.4 MB","code":"class Solution {\npublic:\n    int kthSmallest(vector<vector<int>>& matrix, int k) {\n        vector<int> nums;\n        int n = matrix.size();\n        for (int i = 0; i < min(k, n); i++)\n            nums.push_back(matrix[0][i]);\n        // nums is a sorted array;\n        // we will pick further rows from the matrix one by one upto kth row;\n        // and keep merging them in nums array in O(min(k, n)) time;\n        for (int i = 1; i < min(k, n); i++) {\n            int ptr1 = 0, ptr2 = 0;\n            vector<int> temp;\n            while ((ptr1 < nums.size()) && (ptr2 < min(k, n))) {\n                if (nums[ptr1] < matrix[i][ptr2])\n                    temp.push_back(nums[ptr1++]);\n                else\n                    temp.push_back(matrix[i][ptr2++]);\n            }\n            while (ptr1 < nums.size())\n                temp.push_back(nums[ptr1++]);\n            while (ptr2 < matrix[i].size())\n                temp.push_back(matrix[i][ptr2++]);\n            nums = temp;\n        }\n        return nums[k-1];\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"kth-smallest-element-in-a-sorted-matrix"}