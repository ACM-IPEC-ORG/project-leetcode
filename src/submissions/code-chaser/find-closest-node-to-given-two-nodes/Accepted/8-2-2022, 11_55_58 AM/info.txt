{"id":762997820,"lang":"cpp","time":"2Â months","timestamp":1659421558,"status_display":"Accepted","runtime":"327 ms","url":"/submissions/detail/762997820/","is_pending":"Not Pending","title":"Find Closest Node to Given Two Nodes","memory":"105.3 MB","code":"class Solution {\npublic:\n    int closestMeetingNode(vector<int>& edges, int node1, int node2) {\n        if (node1 == node2)\n            return node1;\n        int n = edges.size();\n        vector<int> rd1(n, -1), rd2(n, -1);\n        vector<bool> vis1(n, 0), vis2(n, 0);\n        int dist = 0;\n        while (!vis1[node1]) {\n            vis1[node1] = 1;\n            rd1[node1] = dist++;\n            node1 = edges[node1];\n            if (node1 == -1)\n                break;\n        }\n        dist = 0;\n        while (!vis2[node2]) {\n            vis2[node2] = 1;\n            rd2[node2] = dist++;\n            node2 = edges[node2];\n            if (node2==-1)\n                break;\n        }\n        vector<pair<int, int>> distances(n, {-1, -1});\n        for (int i = 0; i < n; i++) {\n            if ((rd1[i] != -1) && (rd2[i] != -1))\n                distances[i].first = max(rd1[i], rd2[i]);\n            distances[i].second = i;\n        }\n        sort(distances.begin(), distances.end());\n        int ind = 0;\n        for (ind = 0; (ind < n) && (distances[ind].first == -1); ind++);\n        return (ind < n)?distances[ind].second:(-1);\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-closest-node-to-given-two-nodes"}