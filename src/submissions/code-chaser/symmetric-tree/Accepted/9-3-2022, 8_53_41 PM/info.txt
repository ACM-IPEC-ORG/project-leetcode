{"id":790519424,"lang":"cpp","time":"4Â weeks","timestamp":1662218621,"status_display":"Accepted","runtime":"12 ms","url":"/submissions/detail/790519424/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\nprivate:\n    bool areMirrored(TreeNode* a, TreeNode* b) {\n        if ((!a) || (!b)) {\n            return ((!a) && (!b));\n        }\n        if (a -> val != b -> val)\n            return false;\n        return areMirrored(a -> left, b -> right) && areMirrored(a -> right, b -> left);\n    }\npublic:\n    bool isSymmetric(TreeNode* root) {\n        return areMirrored(root -> left, root -> right);\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}