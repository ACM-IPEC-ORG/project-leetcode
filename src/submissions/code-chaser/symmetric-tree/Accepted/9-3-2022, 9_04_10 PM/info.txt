{"id":790531348,"lang":"cpp","time":"4Â weeks","timestamp":1662219250,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/790531348/","is_pending":"Not Pending","title":"Symmetric Tree","memory":"16.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    bool isSymmetric(TreeNode* root) {\n        stack<TreeNode*> s;\n        s.push(root -> left);\n        s.push(root -> right);\n        while (!s.empty()) {\n            TreeNode* right = s.top();\n            s.pop();\n            TreeNode* left = s.top();\n            s.pop();\n            if ((!right) && (!left))\n                continue;\n            if ((!right) || (!left))\n                return false;\n            if (right -> val != left -> val)\n                return false;\n            s.push(right -> left);\n            s.push(left -> right);\n            s.push(left -> left);\n            s.push(right -> right);\n        }\n        return true;\n    }\n};","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"symmetric-tree"}