{"id":553741167,"lang":"cpp","time":"1Â year","timestamp":1631467043,"status_display":"Accepted","runtime":"7 ms","url":"/submissions/detail/553741167/","is_pending":"Not Pending","title":"Flatten Binary Tree to Linked List","memory":"12.8 MB","code":"/*\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n--||author : codechaser||-- \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\nclass Solution\n{\npublic:\n    void flatten(TreeNode *root)\n    {\n        if (root == NULL || (root->left == NULL && root->right == NULL))\n            return;\n        if (root->left != NULL)\n        {\n            flatten(root->left);\n            TreeNode *temp = root->right;\n            root->right = root->left;\n            root->left = NULL;\n            TreeNode *t = root->right;\n            while (t->right)\n            {\n                t = t->right;\n            }\n            t->right = temp;\n        }\n        flatten(root->right);\n    }\n};\n/*\n    |---------------------------------------------------|\n    |||   https://codeforces.com/profile/codechaser   |||\n    |||   https://www.codechef.com/users/codechaser   |||\n    |||        https://github.com/code-chaser         |||\n    |---------------------------------------------------|\n*/","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"flatten-binary-tree-to-linked-list"}