{"id":790891384,"lang":"cpp","time":"4Â weeks","timestamp":1662257010,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/790891384/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> levels;\n        deque<TreeNode*> nodes;\n        if (root) nodes.push_back(root);\n        int levelNumber = 0;\n        while (!nodes.empty()) {\n            vector<int> level;\n            int levelSize = nodes.size();\n            while (levelSize--) {\n                if (levelNumber & 1) {\n                    level.push_back(nodes.front() -> val);\n                    if (nodes.front() -> right)\n                        nodes.push_back(nodes.front() -> right);\n                    if (nodes.front() -> left)\n                        nodes.push_back(nodes.front() -> left);\n                    nodes.pop_front();\n                }\n                else {\n                    level.push_back(nodes.back() -> val);\n                    if (nodes.back() -> left)\n                        nodes.push_front(nodes.back() -> left);\n                    if (nodes.back() -> right)\n                        nodes.push_front(nodes.back() -> right);\n                    nodes.pop_back();\n                }\n            }\n            levels.push_back(level);\n            levelNumber++;\n        }\n        return levels;\n    }\n};\n/*\n        3\n      /   \\\n     9     20\n         /    \\\n        15     7\n[3]\nlevel0 -> [3]       , [20,9]\nlevel1 -> [3,20]    , [9,7,15]\n       -> [3,20,9]  , [7,15]\nlevel2 -> [3,20,9,15,7]\n*/","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}