{"id":790875972,"lang":"cpp","time":"4Â weeks","timestamp":1662254513,"status_display":"Accepted","runtime":"4 ms","url":"/submissions/detail/790875972/","is_pending":"Not Pending","title":"Binary Tree Zigzag Level Order Traversal","memory":"12.2 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> zigzagLevelOrder(TreeNode* root) {\n        vector<vector<int>> levels;\n        queue<TreeNode*> nodes;\n        if (root) nodes.push(root);\n        int levelNumber = 0;\n        while (!nodes.empty()) {\n            vector<int> level;\n            int levelSize = nodes.size();\n            while (levelSize--) {\n                level.push_back(nodes.front() -> val);\n                if (nodes.front() -> left)\n                    nodes.push(nodes.front() -> left);\n                if (nodes.front() -> right)\n                    nodes.push(nodes.front() -> right);\n                nodes.pop();\n            }\n            if (levelNumber & 1) {\n                reverse(level.begin(), level.end());\n            }\n            levels.push_back(level);\n            levelNumber++;\n        }\n        return levels;\n    }\n};","compare_result":"111111111111111111111111111111111","title_slug":"binary-tree-zigzag-level-order-traversal"}