{"id":762329688,"lang":"cpp","time":"2Â months","timestamp":1659359382,"status_display":"Accepted","runtime":"208 ms","url":"/submissions/detail/762329688/","is_pending":"Not Pending","title":"Longest Substring Without Repeating Characters","memory":"8.5 MB","code":"class Solution {\npublic:\n    int lengthOfLongestSubstring(string s) {\n        int ans = 0;\n        map<int, int> vis;\n        for (int i = 0, j = 0; (i < s.size()) && (j < s.size()); j++) {\n            if (vis[s[j]] > i) {\n                cout<<\"inside if at: \"<<s[j]<<\"\\n\";\n                ans = max(ans, j-i);\n                i = vis[s[j]];\n                vis[s[j]] = j + 1;\n            }\n            else {\n                cout<<\"inside else at: \"<<s[j]<<\"\\n\";\n                ans = max(ans, j-i+1);\n                vis[s[j]] = j + 1;\n            }\n        }\n        return ans;\n    }\n};","compare_resulttitle_slug":"longest-substring-without-repeating-characters"}