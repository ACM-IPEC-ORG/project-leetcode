{"id":790861837,"lang":"cpp","time":"4Â weeks","timestamp":1662252133,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/790861837/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"12.7 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> levels;\n        if (!root) {\n            return levels;\n        }\n        queue<TreeNode*> q;\n        q.push(root);\n        while (!q.empty()) {\n            vector<int> level;\n            int levelSize = q.size();\n            while (levelSize--) {\n                level.push_back(q.front() -> val);\n                if (q.front() -> left) q.push(q.front() -> left);\n                if (q.front() -> right) q.push(q.front() -> right);\n                q.pop();\n            }\n            levels.push_back(level);\n        }\n        return levels;\n    }\n};","compare_result":"1111111111111111111111111111111111","title_slug":"binary-tree-level-order-traversal"}