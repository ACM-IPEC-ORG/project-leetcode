{"id":790626921,"lang":"cpp","time":"4Â weeks","timestamp":1662225923,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/790626921/","is_pending":"Not Pending","title":"Binary Tree Level Order Traversal","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<vector<int>> levelOrder(TreeNode* root) {\n        vector<vector<int>> levels;\n        queue<TreeNode*> q1;\n        q1.push(root);\n        while (!q1.empty()) {\n            vector<int> level;\n            queue<TreeNode*> q2;\n            while (!q1.empty()) {\n                level.push_back(q1.front() -> val);\n                if (q1.front() -> left != nullptr) q2.push(q1.front() -> left);\n                if (q1.front() -> right != nullptr) q2.push(q1.front() -> right);\n                q1.pop();\n            }\n            levels.push_back(level);\n            q1 = q2;\n        }\n        return levels;\n    }\n};","compare_result":"1100000000000000000000000000000000","title_slug":"binary-tree-level-order-traversal"}