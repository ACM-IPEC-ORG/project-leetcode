{"id":761396794,"lang":"cpp","time":"2Â months","timestamp":1659262438,"status_display":"Accepted","runtime":"851 ms","url":"/submissions/detail/761396794/","is_pending":"Not Pending","title":"Burst Balloons","memory":"10.4 MB","code":"class Solution {\npublic:\n    int maxCoins(vector<int>& nums) {\n        //including the nums[-1] and nums[n]\n        int n = nums.size() + 2;        \n        vector<vector<int>> dp(n, vector<int>(n));\n        vector<int> new_nums(n, 1);\n        int i = 1;\n        for(auto num : nums) {\n            new_nums[i++] = num;\n        }\n        for(int len = 2; len <= n; len++) { \n            //iterate from interval length from 2 to n\n            for(int i = 0; i <= n - len; i++) {\n                int j = i + len - 1;\n                //select between left and right boundary (i, j)\n                for(int k = i + 1; k < j; k++) { \n                    dp[i][j] = max(dp[i][j], dp[i][k] + dp[k][j] + new_nums[i] * new_nums[k] * new_nums[j]);\n                }\n            }\n        }\n        return dp[0][n - 1];\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"burst-balloons"}