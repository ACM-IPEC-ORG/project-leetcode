{"id":789748565,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1662135454,"status_display":"Accepted","runtime":"70 ms","url":"/submissions/detail/789748565/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.5 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int carry = 0;\n        ListNode* l0 = new ListNode(-1);\n        ListNode* curr = l0;\n        while (l1 && l2) {\n            int prevCarry = carry;\n            carry = (l1 -> val + l2 -> val + prevCarry) / 10;\n            ListNode* newNode = new ListNode((l1 -> val + l2 -> val + prevCarry) % 10);\n            curr -> next = newNode;\n            curr = newNode;\n            l1 = l1 -> next;\n            l2 = l2 -> next;\n        }\n        while (l1) {\n            int prevCarry = carry;\n            carry = (l1 -> val + prevCarry) / 10;\n            ListNode* newNode = new ListNode((l1 -> val + prevCarry) % 10);\n            curr -> next = newNode;\n            curr = newNode;\n            l1 = l1 -> next;\n        }\n        while (l2) {\n            int prevCarry = carry;\n            carry = (l2 -> val + prevCarry) / 10;\n            ListNode* newNode = new ListNode((l2 -> val + prevCarry) % 10);\n            curr -> next = newNode;\n            curr = newNode;\n            l2 = l2 -> next;\n        }\n        if (carry) {\n            ListNode* newNode = new ListNode(carry);\n            curr -> next = newNode;\n        }\n        return l0 -> next;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}