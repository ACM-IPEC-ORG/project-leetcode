{"id":789430515,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1662100633,"status_display":"Accepted","runtime":"62 ms","url":"/submissions/detail/789430515/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"70.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int carry = 0;\n        if (!(l1 && l2))\n            return l1 ? l1 : l2;\n        ListNode* resultHead = l1;\n        ListNode* curr = nullptr;\n        while (l1 && l2) {\n            curr = l1;\n            int tempCarry = carry;\n            carry = (l1 -> val + l2 -> val + tempCarry) / 10;\n            curr -> val = (l1 -> val + l2 -> val + tempCarry) % 10;\n            l1 = l1 -> next;\n            l2 = l2 -> next;\n        }\n        if (l1) {\n            curr -> next = l1;\n            while (l1) {\n                curr = l1;\n                int tempCarry = carry;\n                carry = (l1 -> val + tempCarry) / 10;\n                curr -> val = (l1 -> val + tempCarry) % 10;\n                l1 = l1 -> next;\n            }\n        }\n        else {\n            curr -> next = l2;\n            while (l2) {\n                curr = l2;\n                int tempCarry = carry;\n                carry = (l2 -> val + tempCarry) / 10;\n                curr -> val = (l2 -> val + tempCarry) % 10;\n                l2 = l2 -> next;\n            }\n        }\n        if (carry) {\n            curr -> next = new ListNode(carry);\n        }\n        return resultHead;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}