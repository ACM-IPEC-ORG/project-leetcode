{"id":789362949,"lang":"cpp","time":"1Â month","timestamp":1662094103,"status_display":"Accepted","runtime":"51 ms","url":"/submissions/detail/789362949/","is_pending":"Not Pending","title":"Add Two Numbers","memory":"71.4 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* addTwoNumbers(ListNode* l1, ListNode* l2) {\n        int sum = 0;\n        ListNode* resultHead = new ListNode((l1 -> val + l2 -> val) % 10);\n        int carry = (l1 -> val + l2 -> val) / 10;\n        ListNode* curr = resultHead;\n        l1 = l1 -> next, l2 = l2 -> next;\n        while ((l1 != nullptr) && (l2 != nullptr)) {\n            curr -> next = new ListNode((l1 -> val + l2 -> val + carry) % 10);\n            carry = (l1 -> val + l2 -> val + carry) / 10;\n            l1 = l1 -> next, l2 = l2 -> next;\n            curr = curr -> next;\n        }\n        while (l1 != nullptr) {\n            curr -> next = new ListNode((l1 -> val + carry) % 10);\n            carry = (l1 -> val + carry) / 10;\n            l1 = l1 -> next;\n            curr = curr -> next;\n        }\n        while (l2 != nullptr) {\n            curr -> next = new ListNode((l2 -> val + carry) % 10);\n            carry = (l2 -> val + carry) / 10;\n            l2 = l2 -> next;\n            curr = curr -> next;\n        }\n        if (carry > 0)\n            curr -> next = new ListNode(carry % 10);\n        return resultHead;\n    }\n};","compare_resulttitle_slug":"add-two-numbers"}