{"id":783194498,"lang":"cpp","time":"1 month, 1 week","timestamp":1661443647,"status_display":"Accepted","runtime":"10 ms","url":"/submissions/detail/783194498/","is_pending":"Not Pending","title":"Find First and Last Position of Element in Sorted Array","memory":"13.6 MB","code":"class Solution {\npublic:\n    vector<int> searchRange(vector<int>& nums, int target) {\n        int n = nums.size();\n        if (!n)\n            return {-1, -1};\n        int l = 0, r = n - 1;\n        int first = l + ((r - l) >> 1);\n        while ((l < r) && (first >= 0) && (first < n)) {\n            if (nums[first] < target) {\n                l = first + 1;\n            }\n            else if (nums[first] == target) {\n                r = first;\n            }\n            else if (nums[first] > target) {\n                r = first - 1;\n            }\n            first = l + ((r - l) >> 1);\n        }\n        if (first < 0 || first >= n)\n            return {-1, -1};\n        if (nums[first] != target)\n            return {-1, -1};\n        l = first, r = n - 1;\n        int last = l + (((r - l) + 1) >> 1);\n        while ((l < r) && (last >= 0) && (last < n)) {\n            if (nums[last] == target) {\n                l = last;\n            }\n            else if (nums[last] > target) {\n                r = last - 1;\n            }\n            last = l + (((r - l) + 1) >> 1);\n        }\n        if (last < 0 || last >= n)\n            return {-1, -1};\n        if (nums[last] != target)\n            return {-1, -1};\n        if (nums[first] == target && nums[last] == target) {\n            return {first, last};\n        }\n        else {\n            return {-1, -1};\n        }\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"find-first-and-last-position-of-element-in-sorted-array"}