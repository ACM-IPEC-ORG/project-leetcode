{"id":790283678,"lang":"cpp","time":"4Â weeks","timestamp":1662197945,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/790283678/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> traversal;\n        if (!root)\n            return traversal;\n        stack<pair<TreeNode*, bool>> nodes;\n        nodes.push({root, 0});\n        TreeNode* curr = root -> left;\n        while ((!nodes.empty()) || (curr)) {\n            if (curr) {\n                nodes.push({curr, 0});\n                curr = curr -> left;\n            }\n            else if (!nodes.top().second) {\n                curr = nodes.top().first -> right;\n                nodes.top().second = 1;\n            }\n            else {\n                traversal.push_back(nodes.top().first -> val);\n                nodes.pop();\n            }\n        }\n        return traversal;\n    }\n};","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal"}