{"id":791082815,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1662273508,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/791082815/","is_pending":"Not Pending","title":"Binary Tree Postorder Traversal","memory":"8.5 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> postorderTraversal(TreeNode* root) {\n        vector<int> traversal;\n        if (!root)\n            return traversal;\n        stack<TreeNode*> nodes;\n        nodes.push(root);\n        TreeNode* curr = root -> left;\n        while ((curr) || (!nodes.empty())) {\n            if (curr) {\n                nodes.push(curr);\n                curr = curr -> left;\n            }\n            else {\n                TreeNode* temp = nodes.top() -> right;\n                if (temp) {\n                    curr = temp;\n                }\n                else {\n                    temp = nodes.top();\n                    nodes.pop();\n                    traversal.push_back(temp -> val);\n                    while ((!nodes.empty()) && (temp == nodes.top() -> right)) {\n                        temp = nodes.top();\n                        nodes.pop();\n                        traversal.push_back(temp -> val);\n                    }\n                }\n            }\n        }\n        return traversal;\n    }\n};\n/*\ncurr = null;\nnodes = [1];\ncurr = 2;\n\ncurr = 2;\nnodes = [1,2];\ncurr = 3;\n\ncurr = 3;\nnodes = [1,2,3];\ncurr = null;\n\ncurr = null;\nnodes = [1,2,3];\ntemp = null;\n    temp = 3;\n    traversal = [3];\n    nodes = [1,2];\n\ncurr = null;\nnodes = [1,2];\ntemp = null;\n    temp = 2;\n    traversal = [3,2];\n    node = [1];\n    \n\n*/","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-postorder-traversal"}