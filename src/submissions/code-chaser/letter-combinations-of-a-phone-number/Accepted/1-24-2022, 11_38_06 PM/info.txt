{"id":626933613,"lang":"cpp","time":"8 months, 1 week","timestamp":1643047686,"status_display":"Accepted","runtime":"13 ms","url":"/submissions/detail/626933613/","is_pending":"Not Pending","title":"Letter Combinations of a Phone Number","memory":"8 MB","code":"/*\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n--||author : codechaser||-- \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\nclass Solution\n{\npublic:\n    void recursive(string digits, vector<string> &res, map<int, string> m, string ans)\n    {\n        if (digits.length() == 0)\n            res.push_back(ans);\n\n        int d = (digits[0] - '0');\n\n        for (int i = 0; i < m[d].length(); i++)\n            recursive(digits.substr(1), res, m, ans + m[d][i]);\n    }\n\n    vector<string> letterCombinations(string digits)\n    {\n        if (digits == \"\")\n            return {};\n        map<int, string> m;\n        m[2] = \"abc\";\n        m[3] = \"def\";\n        m[4] = \"ghi\";\n        m[5] = \"jkl\";\n        m[6] = \"mno\";\n        m[7] = \"pqrs\";\n        m[8] = \"tuv\";\n        m[9] = \"wxyz\";\n        vector<string> res;\n        recursive(digits, res, m, \"\");\n\n        return res;\n    }\n};\n////////////////////////////////////////////////////////////////////////////////////////////////////////////\n/*\n    |---------------------------------------------------|\n    |||   https://codeforces.com/profile/codechaser   |||\n    |||   https://www.codechef.com/users/codechaser   |||\n    |||        https://github.com/code-chaser         |||\n    |---------------------------------------------------|\n*/\n////////////////////////////////////////////////////////////////////////////////////////////////////////////","compare_result":"1111111111111111111111111","title_slug":"letter-combinations-of-a-phone-number"}