{"id":789736509,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1662134362,"status_display":"Accepted","runtime":"19 ms","url":"/submissions/detail/789736509/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"11.7 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        if ((!head)||(!(head->next)))\n            return head;\n        ListNode* curr = head->next;\n        ListNode* prev = head;\n        while (curr != nullptr) {\n            if (curr -> val == prev -> val) {\n                prev -> next = curr -> next;\n                curr = curr -> next;\n            }\n            else {\n                curr = curr -> next;\n                prev = prev -> next;\n            }\n        }\n        return head;\n    }\n\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"remove-duplicates-from-sorted-list"}