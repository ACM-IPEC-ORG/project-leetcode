{"id":769157805,"lang":"cpp","time":"1 month, 3 weeks","timestamp":1660033319,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/769157805/","is_pending":"Not Pending","title":"Remove Duplicates from Sorted List","memory":"N/A","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* deleteDuplicates(ListNode* head) {\n        vector<bool> present(201, 0);\n        present[head -> val + 100] = 1;\n        ListNode *prev = head, *curr = head -> next;\n        while(curr != nullptr) {\n            if(present[curr -> val + 100])\n                curr = prev -> next = curr -> next;\n            else\n                prev = curr, curr = curr -> next;\n        }\n        return head;\n    }\n};","compare_result":"1000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"remove-duplicates-from-sorted-list"}