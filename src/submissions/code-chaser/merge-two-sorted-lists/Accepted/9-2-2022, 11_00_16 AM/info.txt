{"id":789388659,"lang":"cpp","time":"4 weeks, 1 day","timestamp":1662096616,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/789388659/","is_pending":"Not Pending","title":"Merge Two Sorted Lists","memory":"14.9 MB","code":"/**\n * Definition for singly-linked list.\n * struct ListNode {\n *     int val;\n *     ListNode *next;\n *     ListNode() : val(0), next(nullptr) {}\n *     ListNode(int x) : val(x), next(nullptr) {}\n *     ListNode(int x, ListNode *next) : val(x), next(next) {}\n * };\n */\nclass Solution {\npublic:\n    ListNode* mergeTwoLists(ListNode* list1, ListNode* list2) {\n        if (!(list1 && list2))\n            return list1 ? list1 : list2;\n        ListNode* resultHead = nullptr;\n        ListNode* last = nullptr;\n        while (list1 && list2) {\n            if ((list1 -> val) < (list2 -> val)) {\n                if (resultHead) last = last -> next = list1;\n                else resultHead = last = list1;\n                list1 = list1 -> next;\n            }\n            else {\n                if (resultHead) last = last -> next = list2;\n                else resultHead = last = list2;\n                list2 = list2 -> next;\n            }\n        }\n        if (list1) {\n            last = last -> next = list1;\n        }\n        if (list2) {\n            last = last -> next = list2;\n        }\n        return resultHead;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"merge-two-sorted-lists"}