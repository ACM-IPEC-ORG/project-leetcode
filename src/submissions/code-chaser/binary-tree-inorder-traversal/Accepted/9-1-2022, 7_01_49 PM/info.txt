{"id":788822579,"lang":"cpp","time":"1Â month","timestamp":1662039109,"status_display":"Accepted","runtime":"0 ms","url":"/submissions/detail/788822579/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.3 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> traversal;\n        if (root == nullptr)\n            return traversal;\n        stack<TreeNode*> nodes;\n        TreeNode* curr = root -> left;\n        nodes.push(root);\n        while ((curr != nullptr) || (!nodes.empty())) {\n            if (curr == nullptr) {\n                curr = nodes.top() -> right;\n                traversal.push_back(nodes.top() -> val);\n                nodes.pop();\n                continue;\n            }\n            nodes.push(curr);\n            curr = curr -> left;\n        }\n        return traversal;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}