{"id":790260816,"lang":"cpp","time":"4Â weeks","timestamp":1662195329,"status_display":"Accepted","runtime":"3 ms","url":"/submissions/detail/790260816/","is_pending":"Not Pending","title":"Binary Tree Inorder Traversal","memory":"8.4 MB","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    vector<int> inorderTraversal(TreeNode* root) {\n        vector<int> traversal;\n        stack<TreeNode*> nodes;\n        TreeNode* curr = root;\n        while (1) {\n            if (curr) {\n                nodes.push(curr);\n                curr = curr -> left;\n            }\n            else {\n                if (nodes.empty())\n                    return traversal;\n                TreeNode* node = nodes.top();\n                nodes.pop();\n                traversal.push_back(node -> val);\n                curr = node -> right;\n            }\n        }\n        return traversal;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"binary-tree-inorder-traversal"}