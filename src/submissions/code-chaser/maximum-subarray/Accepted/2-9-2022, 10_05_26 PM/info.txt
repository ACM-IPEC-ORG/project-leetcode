{"id":637985361,"lang":"cpp","time":"7 months, 3 weeks","timestamp":1644424526,"status_display":"Accepted","runtime":"132 ms","url":"/submissions/detail/637985361/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"68.2 MB","code":"/*\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n--||author : codechaser||--\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\nclass Solution\n{\npublic:\n    int maxSubArray(vector<int> &nums)\n    {\n        int dp[nums.size()];\n        dp[0] = nums[0];\n        for (int i = 1; i < nums.size(); i++)\n            dp[i] = max(dp[i - 1] + nums[i], nums[i]);\n        int ans = dp[0];\n        for (int i = 1; i < nums.size(); i++)\n            ans = max(ans, dp[i]);\n        return ans;\n    }\n};\n/*\n    |---------------------------------------------------|\n    |||   https://codeforces.com/profile/codechaser   |||\n    |||   https://www.codechef.com/users/codechaser   |||\n    |||        https://github.com/code-chaser         |||\n    |---------------------------------------------------|\n*/","compare_result":"11111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"maximum-subarray"}