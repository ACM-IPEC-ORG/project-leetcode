{"id":743547142,"lang":"cpp","time":"2 months, 3 weeks","timestamp":1657471657,"status_display":"Runtime Error","runtime":"N/A","url":"/submissions/detail/743547142/","is_pending":"Not Pending","title":"Maximum Subarray","memory":"N/A","code":"class Solution {\npublic:\n    int maxSubArray(vector<int>& nums) {\n        int maxElement = nums[0];\n        for(int i = 1; i < nums.size(); i++)\n            maxElement = max(maxElement, nums[i]);\n        if(maxElement <= 0) return maxElement;\n        vector<int> segments;\n        for(int i = 0; i < nums.size();){\n            int segSum = 0;\n            if(nums[i] <= 0) while((i < nums.size()) && (nums[i] <= 0))\n                segSum += nums[i++];\n            else while((i < nums.size()) && (nums[i] >= 0))\n                segSum += nums[i++];\n            if((segments.size() || (segSum > 0)) && ((i < nums.size()) || (segSum > 0))) segments.push_back(segSum);\n        }\n        \n        vector<int> pref = segments;\n        for(int i = 1; i < pref.size(); i++)\n            pref[i] += pref[i-1];\n        maxElement = segments[0];\n        for(int i = 1; i < segments.size(); i++)\n            maxElement = max(maxElement, segments[i]);\n        int maxSum = maxElement;\n        for(int i = 0, j = segments.size(); (i < segments.size()) && (j >= 0); i += 2, j -= 2){\n            while((i < (segments.size() - 2)) && ((segments[i] + segments[i+1]) <= 0)) i+=2;\n            while((j > i) && ((segments[j-1] + segments[j-2]) <= 0)) j-=2;\n            if(i >= j) break;\n            maxSum = max(maxSum, pref[j-1] - ((i > 0) ? pref[i-1] : 0));\n        }\n        return maxSum;\n    }\n};","compare_result":"10000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000000","title_slug":"maximum-subarray"}