{"id":789254578,"lang":"cpp","time":"1Â month","timestamp":1662081499,"status_display":"Accepted","runtime":"44 ms","url":"/submissions/detail/789254578/","is_pending":"Not Pending","title":"Number of Islands","memory":"12.7 MB","code":"class Solution {\nprivate:\n    void dfs(int r, int c, vector<vector<bool>> &vis, vector<vector<char>> &grid) {\n        if (r < 0 || r >= grid.size())\n            return;\n        if (c < 0 || c >= grid[0].size())\n            return;\n        if (vis[r][c])\n            return;\n        vis[r][c] = 1;\n        if (grid[r][c] == '0')\n            return;\n        dfs(r-1,c,vis,grid);\n        dfs(r,c+1,vis,grid);\n        dfs(r+1,c,vis,grid);\n        dfs(r,c-1,vis,grid);\n        return;\n    }\npublic:\n    int numIslands(vector<vector<char>>& grid) {\n        int numberOfIslands = 0;\n        vector<vector<bool>> vis(grid.size(), vector<bool>(grid[0].size()));\n        for (int r = 0; r < grid.size(); r++) {\n            for (int c = 0; c < grid[0].size(); c++) {\n                if (grid[r][c] == '1' && (!vis[r][c])) {\n                    numberOfIslands++;\n                    dfs(r,c,vis,grid);\n                }\n            }\n        }\n        return numberOfIslands;\n    }\n};","compare_result":"1111111111111111111111111111111111111111111111111","title_slug":"number-of-islands"}