{"id":791301204,"lang":"cpp","time":"3 weeks, 6 days","timestamp":1662295591,"status_display":"Wrong Answer","runtime":"N/A","url":"/submissions/detail/791301204/","is_pending":"Not Pending","title":"Correct a Binary Tree","memory":"N/A","code":"/**\n * Definition for a binary tree node.\n * struct TreeNode {\n *     int val;\n *     TreeNode *left;\n *     TreeNode *right;\n *     TreeNode() : val(0), left(nullptr), right(nullptr) {}\n *     TreeNode(int x) : val(x), left(nullptr), right(nullptr) {}\n *     TreeNode(int x, TreeNode *left, TreeNode *right) : val(x), left(left), right(right) {}\n * };\n */\nclass Solution {\npublic:\n    TreeNode* correctBinaryTree(TreeNode* root) {\n        unordered_set<TreeNode*> vis;\n        TreeNode* curr = root;\n        stack<TreeNode*> nodes;\n        while (curr || (!nodes.empty())) {\n            if (curr) {\n                nodes.push(curr);\n                curr = curr -> right;\n                if (curr)\n                    vis.insert(curr);\n            }\n            else {\n                TreeNode* temp = nodes.top() -> left;\n                if (temp) {\n                    if (temp -> right) {\n                        if (vis.find(temp -> right) != vis.end()) {\n                            nodes.top() -> left = nullptr;\n                            return root;\n                        }\n                    }\n                    curr = temp;\n                }\n                nodes.pop();\n            }\n        }\n        return root;\n    }\n};","compare_result":"111001010000000001101010100000010000111010111011000","title_slug":"correct-a-binary-tree"}