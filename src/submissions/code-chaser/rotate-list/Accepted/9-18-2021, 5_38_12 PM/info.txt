{"id":556922692,"lang":"cpp","time":"1Â year","timestamp":1631966892,"status_display":"Accepted","runtime":"8 ms","url":"/submissions/detail/556922692/","is_pending":"Not Pending","title":"Rotate List","memory":"11.8 MB","code":"/*\n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n--||author : codechaser||-- \n~~~~~~~~~~~~~~~~~~~~~~~~~~~\n*/\nclass Solution\n{\npublic:\n    ListNode *rotateRight(ListNode *head, int k)\n    {\n        if (head == NULL || head->next == NULL)\n            return head;\n        ListNode *node1 = head;\n        ListNode *node2 = NULL;\n        int count = 1;\n        while (node1->next != NULL)\n        {\n            node2 = node1;\n            node1 = node1->next;\n            count++;\n        }\n        k = (k >= count ? k % count : k);\n        for (int i = 0; i < k; i++)\n        {\n            node1->next = head;\n            head = node1;\n            node2->next = NULL;\n            while (node1->next != NULL)\n            {\n                node2 = node1;\n                node1 = node1->next;\n            }\n        }\n        return head;\n    }\n};\n/*\n    |---------------------------------------------------|\n    |||   https://codeforces.com/profile/codechaser   |||\n    |||   https://www.codechef.com/users/codechaser   |||\n    |||        https://github.com/code-chaser         |||\n    |---------------------------------------------------|\n*/","compare_result":"111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111111","title_slug":"rotate-list"}